def bubble_sort(array):
    n = len(array)
    for i in range(n):
        swapped = False
        for j in range(0, n - i - 1):
            if array[j] > array[j + 1]:
                # Swap if the current element is greater than the next
                array[j], array[j + 1] = array[j + 1], array[j]
                swapped = True
        # If no elements were swapped, the array is sorted
        if not swapped:
            break
    return array

# Test cases
test_cases = [
    ([], []),
    ([1], [1]),
    ([7, 7, 7, 7], [7, 7, 7, 7]),
    ([-5, -1, -3, -2, -4], [-5, -4, -3, -2, -1]),
    ([5, 2, 9, 1, 5, 6], [1, 2, 5, 5, 6, 9]),
    ([10, 8, 6, 4, 2], [2, 4, 6, 8, 10]),
    ([1, 2, 3, 4, 5], [1, 2, 3, 4, 5])
]

# Running the test cases
for i, (input_list, expected_output) in enumerate(test_cases, 1):
    result = bubble_sort(input_list.copy())  # use .copy() to avoid modifying the original list
    assert result == expected_output, f"Test case {i} failed: {result} != {expected_output}"
    print(f"Test case {i} passed: {result} == {expected_output}")

print("All test cases passed!")
